{"version":3,"file":"static/js/423.970062d5.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.styled.js","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\nmargin:auto;\npadding-top: 50px;\nwidth:360px;\n`;\n\nexport const FormInput = styled.input`\nbackground: lightgrey;\nheight:30px;\n`;\n\nexport const FormLabel = styled.label`\ndisplay:flex;\nflex-direction:column;\nmargin-bottom:16px;\n`;\n\n\n\n\n\n\n\n","export const selectContacts = state => state.contacts;\nexport const selectFilter = state => state.filter.text;","import { Form, FormLabel, FormInput} from './ContactForm.styled';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport Button from '@mui/material/Button';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const { contacts } = useSelector(selectContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n    let result = true;\n    contacts.forEach(elm => {\n      if (elm.name === name) {\n        alert(`${name} is already exist.`);\n        resetForm();\n        result = false;\n      }\n    });\n    if (result) {\n      dispatch(addContact({ name, number }));\n      resetForm();\n    }\n  };\n\n\n  return (\n    <Form onSubmit={formSubmit}>\n      <FormLabel htmlFor=\"name\">\n        Name\n        <FormInput\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n      <FormLabel  htmlFor=\"tel\">\n        Number\n        <FormInput\n          value={number}\n          onChange={handleChange}\n          name=\"number\"\n          placeholder=\"Number\"\n          type=\"tel\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n      <Button type=\"submit\" variant=\"outlined\">Add contact</Button>\n    </Form>\n  );\n}","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\nfont-size: 30px;\nfont-weight: 400;\n`;\n\nexport const ContactListItem = styled.li`\npadding: 5px;\nfont-size: 30px;\nfont-weight: 400;\ndisplay:flex;\nalign-items:center;\njustify-content:center;\n`;\n\nexport const ButtonDelete = styled.button`\nalign-items:center;\nfont-size: 20px;\nfont-weight: 400;\nmargin-left:10px;\nborder-radius:10px;\n`;\n\n\nexport const ContactsItem = styled.li`\n  padding: 0 10px;\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\n// export const ContactName = styled.p`\n//   margin-right: auto;\n// `;\n\n// export const ContactNumber = styled.p`\n//   margin-right: 30px;\n// `;\n\nexport const DeleteButton = styled.button`\n  height: 26px;\n  padding: 5px 10px;\n  font-size: 15px;\n  font-weight: 600;\n  border-radius: 5px;\n  border: none;\n  background-color: #eee;\n  color: #ff6c00;\n  cursor: pointer;\n  transition: background-color 300ms linear, color 300ms linear;\n  &:hover {\n    background-color: #ff6c00;\n    color: #eee;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  ContactsList,\n  ContactListItem,\n} from './ContactList.styled';\nimport { fetchContacts, deleteContact } from 'redux/contacts/operations';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const { contacts, isLoading, error } = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const filteredContacts = getFilteredContacts();\n\n  \n\n  return (\n    <ContactsList>\n      {isLoading && <b>Loading contacts...</b>}\n      {error && <b>{error}</b>}\n      {contacts.length > 0 &&\n        filteredContacts.map(({ id, name, number }) => (\n         \n            <ContactListItem  key={id}>\n            <p>\n              {name}: {number}\n            </p>\n            <IconButton\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n              aria-label=\"delete\" size=\"large\">\n              <DeleteIcon fontSize=\"inherit\" />\n            </IconButton>\n          </ContactListItem>\n        ))}\n    </ContactsList>\n  );\n};\n\n\n\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\nmargin:auto;\npadding-top: 50px;\nwidth:360px;\n`;\n\nexport const FormInput = styled.input`\nbackground: lightgrey;\nheight:30px;\n`;\n\nexport const FormLabel = styled.label`\ndisplay:flex;\nflex-direction:column;\nmargin-bottom:16px;\n`;\n","import { Form, FormLabel, FormInput } from \"./Filter.styled\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactFilter } from '../../redux/contacts/filterSlice';\nimport { selectFilter } from '../../redux/contacts/selectors';\n\nexport default function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const filterChange = e => {\n    dispatch(contactFilter(e.currentTarget.value));\n  };\n\n\n  return (\n   <Form>\n  <FormLabel>\n    Find contacts by Name\n     <FormInput\n      type=\"text\"\n      value = {filter}\n      placeholder=\"Search contact\"\n      onChange={filterChange}\n      autoComplete=\"off\"\n    />\n      </FormLabel>\n      </Form>\n);\n};\n    \n\n\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\ndisplay:flex;\ntext-align:center;\njustify-content:center;\npadding-top:40px;\ncolor: lightgray;\nfont-weight:800;\nfont-size:50px;\n`\nexport const ContactsTitle = styled.h2`\ndisplay:flex;\ntext-align:center;\npadding-top:40px;\njustify-content:center;\ncolor: lightgray;\nfont-weight:800;\nfont-size:40px;\n`","import React from \"react\";\nimport ContactForm from \"components/ContactForm/ContactForm\";\nimport ContactList from \"components/ContactList/ContactList\";\nimport Filter from \"components/Filter/Filter\";\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Title, ContactsTitle } from \"./Contacts.styled\";\n\n\nexport default function Contacts () {\n    const { contacts } = useSelector(selectContacts);\n\n    return (\n        <>\n            <Title>Phonebook</Title>\n            <ContactForm />\n            <ContactsTitle>Contacts</ContactsTitle>\n            {contacts.length > 0 && <Filter />}\n            <ContactList />\n        </>\n    );\n};\n\n"],"names":["Form","styled","FormInput","FormLabel","selectContacts","state","contacts","selectFilter","filter","text","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","e","currentTarget","value","resetForm","onSubmit","preventDefault","result","forEach","elm","alert","addContact","htmlFor","onChange","type","placeholder","pattern","title","required","Button","variant","ContactsList","ContactListItem","ContactList","isLoading","error","useEffect","fetchContacts","filteredContacts","normalizedFilter","toLowerCase","contact","includes","getFilteredContacts","length","map","id","IconButton","onClick","deleteContact","size","Delete","fontSize","Filter","contactFilter","autoComplete","Title","ContactsTitle","Contacts"],"sourceRoot":""}