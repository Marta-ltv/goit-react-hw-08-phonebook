{"version":3,"file":"static/js/889.c654d315.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\nmargin:7px;\nborder: 1px solid black;\nborder-radius: 8px;\nwidth:500px;\nbackground-color: #f1ecea;\n`;\n\nexport const Label = styled.label`\nmargin-left: 10px;\nfont-size: 20px;\nfont-weight: 600;\n`;\n\nexport const Input = styled.input`\ndisplay: flex;\npadding: 10px;\nalign-items: center;\nmargin-left: 10px;\nborder-radius: 8px;\n`;\n\n\nexport const Button = styled.button`\nmargin:10px;\npadding:5px;\nborder-radius: 10px;\nborder:none;\nbackground-color: lightblue;\ncolor: white;\n&:hover,&:focus{\n    background-color: black;\n}\n`;\n\n\n\n\n\n\n\n","export const selectContacts = state => state.contacts;\nexport const selectFilter = state => state.filter.text;","\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const { contacts } = useSelector(selectContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n    let result = true;\n    contacts.forEach(elm => {\n      if (elm.name === name) {\n        alert(`${name} is already exist.`);\n        resetForm();\n        result = false;\n      }\n    });\n    if (result) {\n      dispatch(addContact({ name, number }));\n      resetForm();\n    }\n  };\n\n\n  return (\n    <Form onSubmit={formSubmit}>\n      <Label htmlFor=\"name\">\n        Name\n        <Input\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label  htmlFor=\"tel\">\n        Number\n        <Input\n          value={number}\n          onChange={handleChange}\n          name=\"number\"\n          placeholder=\"Number\"\n          type=\"tel\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\nfont-size: 30px;\nfont-weight: 400;\n`;\n\nexport const ContactListItem = styled.li`\npadding: 5px;\nfont-size: 30px;\nfont-weight: 400;\ndisplay:flex;\nalign-items:center;\n\n`;\n\nexport const ButtonDelete = styled.button`\nalign-items:center;\nfont-size: 20px;\nfont-weight: 400;\nmargin-left:10px;\nborder-radius:10px;\n`;\n\n\nexport const ContactsItem = styled.li`\n  padding: 0 10px;\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\n// export const ContactName = styled.p`\n//   margin-right: auto;\n// `;\n\n// export const ContactNumber = styled.p`\n//   margin-right: 30px;\n// `;\n\nexport const DeleteButton = styled.button`\n  height: 26px;\n  padding: 5px 10px;\n  font-size: 15px;\n  font-weight: 600;\n  border-radius: 5px;\n  border: none;\n  background-color: #eee;\n  color: #ff6c00;\n  cursor: pointer;\n  transition: background-color 300ms linear, color 300ms linear;\n  &:hover {\n    background-color: #ff6c00;\n    color: #eee;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  ContactsList,\n  ContactListItem,\n  DeleteButton\n} from './ContactList.styled';\nimport { fetchContacts, deleteContact } from 'redux/contacts/operations';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\n\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const { contacts, isLoading, error } = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const filteredContacts = getFilteredContacts();\n\n  \n\n  return (\n    <ContactsList>\n      {isLoading && <b>Loading contacts...</b>}\n      {error && <b>{error}</b>}\n      {contacts.length > 0 &&\n        filteredContacts.map(({ id, name, number }) => (\n         \n            <ContactListItem  key={id}>\n            <p>\n              {name}: {number}\n            </p>\n            <DeleteButton\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              Delete\n            </ DeleteButton>\n          </ContactListItem>\n        ))}\n    </ContactsList>\n  );\n};\n\n\n\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\npadding: 20px;\nfont-weight: 600;\n`\n\nexport const FilterInput = styled.input`\npadding: 10px;\nborder-radius: 8px;\nmargin-left: 10px;\n`\n\n","import { FilterLabel, FilterInput } from \"./Filter.styled\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactFilter } from '../../redux/contacts/filterSlice';\nimport { selectFilter } from '../../redux/contacts/selectors';\n\nexport default function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const filterChange = e => {\n    dispatch(contactFilter(e.currentTarget.value));\n  };\n\n\n return (\n  <FilterLabel>\n    Find contacts by Name\n     <FilterInput\n      type=\"text\"\n       value = {filter}\n       placeholder=\"Search contact\"\n      onChange={filterChange}\n    />\n  </FilterLabel>\n);\n};\n    \n\n\n","import React from \"react\";\nimport ContactForm from \"components/ContactForm/ContactForm\";\nimport ContactList from \"components/ContactList/ContactList\";\nimport Filter from \"components/Filter/Filter\";\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\n\n\n\nexport default function Contacts () {\n    const { contacts } = useSelector(selectContacts);\n\n    return (\n        <>\n            <h1>Phonebook</h1>\n            <ContactForm />\n            <h2>Contacts</h2>\n            {contacts.length > 0 && <Filter />}\n            <ContactList />\n        </>\n    );\n};\n\n"],"names":["Form","styled","Label","Input","Button","selectContacts","state","contacts","selectFilter","filter","text","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","e","currentTarget","value","resetForm","onSubmit","preventDefault","result","forEach","elm","alert","addContact","htmlFor","onChange","type","placeholder","pattern","title","required","ContactsList","ContactListItem","DeleteButton","ContactList","isLoading","error","useEffect","fetchContacts","filteredContacts","normalizedFilter","toLowerCase","contact","includes","getFilteredContacts","length","map","id","onClick","deleteContact","FilterLabel","FilterInput","Filter","contactFilter","Contacts"],"sourceRoot":""}